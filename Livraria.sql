-- Criação de um banco de dados referente a uma Livraria --
-- estudo de modelagem de banco por meio do SQL server --

CREATE DATABASE LIVRARIA;
GO

USE LIVRARIA;
GO

CREATE TABLE EDITORA(
	CODIGO INT NOT NULL,
	NOME VARCHAR(50) NOT NULL,
	CONSTRAINT PK_EDITORA PRIMARY KEY(CODIGO)
);
GO
CREATE TABLE ASSUNTO(
	SIGLA CHAR(3) NOT NULL,
	DESCRICAO VARCHAR(50),
	CONSTRAINT PK_ASSUNTO PRIMARY KEY(SIGLA)
);
GO
CREATE TABLE AUTOR(
	MATRICULA INT NOT NULL,
	NOME VARCHAR(50) NOT NULL,
	DATA_NASCIMENTO DATE NULL,
	NACIONALIDADE VARCHAR(30) NULL,
	CONSTRAINT PK_AUTOR PRIMARY KEY(MATRICULA)
);
GO
CREATE TABLE LIVRO(
	CODIGO INT NOT NULL,
	TITULO VARCHAR(50) NOT NULL,
	DATA_LANCAMENTO DATE  NOT NULL,
	VALOR MONEY NOT NULL,
	COD_EDITORA INT NOT NULL,
	SIGLA_ASSUNTO CHAR(3) NOT NULL,
	CONSTRAINT PK_LIVRO PRIMARY KEY(CODIGO),
	CONSTRAINT FK_LIVRO_EDITORA FOREIGN KEY(COD_EDITORA)
		REFERENCES EDITORA(CODIGO),
	CONSTRAINT FK_LIVRO_ASSUNTO FOREIGN KEY(SIGLA_ASSUNTO)
		REFERENCES ASSUNTO(SIGLA)
);
GO
CREATE TABLE AUTORIA(
	MAT_AUTOR INT NOT NULL,
	COD_LIVRO INT NOT NULL,
	CONSTRAINT PK_AUTORIA PRIMARY KEY(MAT_AUTOR,COD_LIVRO),
	CONSTRAINT FK_AUTORIA_AUTOR FOREIGN KEY(MAT_AUTOR)
		REFERENCES AUTOR(MATRICULA),
	CONSTRAINT FK_AUTORIA_LIVRO FOREIGN KEY(COD_LIVRO)
		REFERENCES LIVRO(CODIGO)
);
CREATE TABLE PROJETO(
	CODIGO INT NOT NULL IDENTITY,
	NOME VARCHAR(50) NOT NULL,
	DATA_INICIO DATE NOT NULL,
	DATA_TERMINO DATE NULL,
	VALOR MONEY NOT NULL,
	COD_FUNC_GER INT NOT NULL,
	CONSTRAINT PK_PROJETO PRIMARY KEY(CODIGO),
	CONSTRAINT FK_PROJETO_FUNCIONARIO FOREIGN KEY(COD_FUNC_GER)
		REFERENCES FUNCIONARIO(CODIGO),
	CONSTRAINT CK_PROJETO_DATA_TERMINO 
		CHECK(DATA_TERMINO IS NULL OR DATA_TERMINO>=DATA_INICIO)
);
GO
CREATE TABLE FUNCIONARIO_PROJETO(
	CODIGO INT NOT NULL IDENTITY,
	COD_FUNCIONARIO INT NOT NULL,
	COD_PROJETO INT NOT NULL,
	DATA_ENTRADA DATE NOT NULL,
	DATA_SAIDA DATE NULL,
	NUM_HORAS_TRAB FLOAT NOT NULL,
	CONSTRAINT PK_FUNCIONARIO_PROJETO PRIMARY KEY(CODIGO),
	CONSTRAINT FK_FUNCIONARIO_PROJETO_FUNCIONARIO FOREIGN KEY(COD_FUNCIONARIO)
		REFERENCES FUNCIONARIO(CODIGO),
	CONSTRAINT FK_FUNCIONARIO_PROJETO_PROJETO FOREIGN KEY(COD_PROJETO)
		REFERENCES PROJETO(CODIGO),
	CONSTRAINT CK_FUNCIONARIO_PROJETO_DATA_SAIDA 
		CHECK(DATA_SAIDA IS NULL OR DATA_SAIDA>=DATA_ENTRADA),
	CONSTRAINT CK_FUNCIONARIO_PROJETO_NUM_HORAS_TRAB CHECK(NUM_HORAS_TRAB>=0)
);
